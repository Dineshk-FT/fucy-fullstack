import React, { useState } from 'react';
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
  styled,
  TablePagination,
  TextField,
  Typography,
  Box
} from '@mui/material';
import { tableCellClasses } from '@mui/material/TableCell';
import { VulnerbilityHeader } from './constraints';

const StyledTableCell = styled(TableCell)(({ theme }) => ({
  [`&.${tableCellClasses.head}`]: {
    backgroundColor: theme.palette.common.black,
    color: theme.palette.common.white,
    borderRight: '1px solid rgba(224, 224, 224, 1) !important',
    fontSize: 13,
    padding: '2px 8px',
    textAlign: 'center',
  },
  [`&.${tableCellClasses.body}`]: {
    color: 'black',
    fontSize: 13,
    borderRight: '1px solid rgba(224, 224, 224, 1) !important',
    padding: '0px 8px',
    textAlign: 'center',
  },
}));

const StyledTableRow = styled(TableRow)(() => ({
  '&:nth-of-type(even)': {
    backgroundColor: '#f9f9f9',
  },
  '&:nth-of-type(odd)': {
    backgroundColor: '#ffffff',
  },
}));

const VulnerabilityTable = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [page, setPage] = useState(0);
  const [rowsPerPage, setRowsPerPage] = useState(20);

  const handleSearch = (e) => {
    setSearchTerm(e.target.value);
  };

  const handleChangePage = (event, newPage) => {
    setPage(newPage);
  };

  const handleChangeRowsPerPage = (event) => {
    setRowsPerPage(parseInt(event.target.value, 10));
    setPage(0);
  };

  const filteredRows = VulnerbilityHeader.filter((scene) =>
    scene.name.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <Box sx={{ overflow: 'auto', height: '-webkit-fill-available' }}>
      <Box display="flex" justifyContent="space-between" alignItems="center" my={1}>
        <Typography sx={{ fontWeight: 600, fontSize: '16px' }}>
          Vulnerability Table
        </Typography>
        <TextField
          id="search"
          placeholder="Search"
          size="small"
          value={searchTerm}
          onChange={handleSearch}
          sx={{
            '& .MuiInputBase-input': {
              border: '1px solid black',
            },
          }}
        />
      </Box>

      <TableContainer component={Paper} sx={{ borderRadius: '0px', padding: 1 }}>
        <Table sx={{ minWidth: 650 }} aria-label="vulnerability table">
          <TableHead>
            <TableRow>
              <StyledTableCell>Scene ID</StyledTableCell>
              <StyledTableCell>Scene Name</StyledTableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {filteredRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((scene) => (
              <StyledTableRow key={scene.id}>
                <StyledTableCell>{scene.id}</StyledTableCell>
                <StyledTableCell>{scene.name}</StyledTableCell>
              </StyledTableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>

      <TablePagination
        component="div"
        count={filteredRows.length}
        rowsPerPageOptions={[5, 10, 25]}
        page={page}
        onPageChange={handleChangePage}
        rowsPerPage={rowsPerPage}
        onRowsPerPageChange={handleChangeRowsPerPage}
      />
    </Box>
  );
};

export default VulnerabilityTable;
